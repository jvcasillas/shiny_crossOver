[{"name":"app.R","content":"# Load libraries\nlibrary(\"shiny\")\nlibrary(\"shinythemes\")\nlibrary(\"ggplot2\")\nlibrary(\"stargazer\")\n\nset.seed(1)\n\n# Crossover function\ncrossOver <- function(x) {\n  cross <- (summary(x)$coefficients[1, 1] / summary(x)$coefficients[2, 1] * -1)\n  return(cross)\n}\n\n# Creat UI\nui <- fluidPage(\n  # Select theme\n  theme = shinytheme(\"united\"),\n\n  # Application title\n  titlePanel(\"Crossover\", windowTitle = \"Crossover\"),\n\n  sidebarLayout(\n    sidebarPanel(width = 3,\n      h5(\"Description:\"),\n      p(\"This application utilizes the function\", \n      code(\"crossOver\"), \"in order to calculate the 50% \n            crossover point of a perceptual boundary for a /b/-/p/\n            continuum. The application fits a linear function to \n            the log odds of selecting 'pig'.\"),\n      withMathJax(helpText(\"$$\\\\log(\\\\frac{p}{1 - p}) = \n        \\\\beta_0 + \\\\beta_1VOT + \\\\epsilon$$\")),\n      p(\"You can adjust the intercept and slope of the \n        model in real time to obtain an updated calculation of \n        the crossover point in ms.\"),\n      br(),\n      sliderInput(\"intercept\", \n        \"$$\\\\textrm{Intercept}\\\\: (\\\\,\\\\beta_0\\\\,)$$\", \n        min = -10, max = 5, value = -4, step = 0.5),\n      br(),\n      sliderInput(\"slope\", \n        \"$$\\\\textrm{Slope}\\\\: (\\\\,\\\\beta_1VOT\\\\,)$$\", \n        min = -10, max = 10, value = 2.5, step = 0.5),\n      br(),\n      p(strong(\"Created by:\"), \n        tags$a(\"Joseph V. Casillas\", href=\"http://www.jvcasillas.com\"),\n        br(), strong(\"Source code:\"), \n        tags$a(\"Github\", href=\"https://github.com/jvcasill/shiny_crossOver/\")\n      )\n    ),\n\n    mainPanel(\n      fluidRow(\n        column(8,\n          div(align = \"center\",\n            h4(\"Perceptual boundary for /b/ - /p/ continuum\"),\n            plotOutput(\"logPlot\"))\n          ),\n        column(4,\n          div(align = \"center\",\n            h4(\"Model summary\"),\n            br(),br(),br(),\n            tableOutput(\"modelSum\"))\n          )\n        ),\n        br(),\n        br(),\n        div(align = \"center\", h4(tableOutput(\"crossOP\")))\n    )\n  )\n)\n\n# Make server\nserver <- function(input, output) {\n\n  x <- sort(rnorm(1300, 1, 3))\n  \n  linpred <- reactive({\n    linpred <- input$intercept + x * input$slope\n  })\n  \n  prob <- reactive({\n    linpred <- linpred()\n    prob <- exp(linpred)/(1 + exp(linpred))\n  })  \n  \n  runis <- runif(1300, 0, 1)\n  \n  y <- reactive({\n    prob <- prob()\n    y <- ifelse(runis < prob, 1, 0)\n  })\n  \n  dataFrame <- reactive({\n    y <- y()\n    stim <- rep(seq(-60, 60, by = 10), each = 100)\n    df <- data.frame(prop = y, x = x, stim = stim)\n  })\n  \n  mod <- reactive({\n    df <- dataFrame()\n    fit <- glm(prop ~ stim, data = df, family = 'binomial')\n  })\n  \n  cop <- reactive({\n    fit <- mod()\n    cop <- crossOver(fit)\n  })\n  \n  output$logPlot <- renderPlot({\n    df <- dataFrame()\n    fit <- mod()\n    cop <- cop()\n\n    plot(fit$fitted.values ~ stim, data = df, type = 'n', \n         xaxt = 'n', xlab = \"VOT\", yaxt = 'n', ylab  = \"\", \n         main = \"\")\n    curve(predict(fit, data.frame(stim = x),type=\"resp\"), \n          add = TRUE, lty = 1, lwd = 1.5, \n          col = rgb(0, 0, 204, 102, maxColorValue = 255)) \n    abline(v = cop, h = 0.5, \n           col = rgb(150, 0, 204, 102, maxColorValue = 255))\n    abline(h = 0.5, col = 'grey')\n    axis(2, at = c(0, 0.5, 1), label = c(\"big\", \"50%\", \"pig\"), \n         las = 2)\n    axis(1, at = seq(-60, 60, by = 10), \n         label = seq(-60, 60, by = 10))\n  })\n  \n  output$modelSum <- renderPrint({\n    fit <- mod()\n    stargazer(fit, type = 'html', single.row=FALSE, \n              dep.var.labels=\"Proportion 'pig'\", \n              covariate.labels=c(\"VOT\", \"Intercept\"),\n              ci=TRUE, ci.level=0.95, \n              align=FALSE)\n  })\n  \n  output$crossOP <- renderText({\n    fit <- mod()\n    paste0(\"The perceptual boundary is located at: \", \n           round(crossOver(fit), 2), \" (ms).\")\n  })\n  \n}\n\n# Create Shiny app ----\nshinyApp(ui = ui, server = server)\n","type":"text"}]
